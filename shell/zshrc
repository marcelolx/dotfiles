# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# =====================================================================================================================
# General zsh settings
# =====================================================================================================================

# Disable control flow (ctrl-s / ctrl-q)
stty stop '' -ixoff -ixon

# Set spelling correction
setopt correct

# Dont raise errors when regex nomatch fires
unsetopt nomatch

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# =====================================================================================================================
# Oh my zsh settings
# =====================================================================================================================

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Plugins declaration
# =====================================================================================================================

# zsh-syntax-highlighting -> https://github.com/zsh-users/zsh-syntax-highlighting/blob/master/INSTALL.md
# zsh-autosuggestions -> https://github.com/zsh-users/zsh-autosuggestions

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# zsh-syntax-highlighting zsh-autosuggestions is installed via homebrew
plugins=(git adb bower bundler common-aliases docker extract gem gitfast gulp jsontools npm rbenv redis-cli)

# =====================================================================================================================
# Plugins settings
# =====================================================================================================================

# =====================================================================================================================
# Sourcing
# =====================================================================================================================

# Oh my zsh
source $ZSH/oh-my-zsh.sh
source $ZSH/plugins/history-substring-search/history-substring-search.zsh

# =====================================================================================================================
# Plugin bindings
# =====================================================================================================================

# History substring search plugin binding
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

# Autosuggestions + Substring search config
ZSH_AUTOSUGGEST_CLEAR_WIDGETS=("${(@)ZSH_AUTOSUGGEST_CLEAR_WIDGETS:#(up|down)-line-or-history}")
ZSH_AUTOSUGGEST_CLEAR_WIDGETS+=(history-substring-search-up history-substring-search-down)

# =====================================================================================================================
# My additional aliases
# =====================================================================================================================

# ------------------------------------------
#  APT
# ------------------------------------------
alias autoremove='sudo apt autoremove'
alias dist-upgrade='sudo apt full-upgrade'
alias install='sudo apt install'
alias remove='sudo apt remove'
alias update='sudo apt update'
alias upgrade='sudo apt upgrade'
alias up='sudo apt update && sudo apt upgrade -y'

# ------------------------------------------
# Services
# ------------------------------------------
alias ss='sudo service'
alias ssmysql='sudo service mysql start'
alias sspgsstart='sudo service postgresql start'
alias sspgsstop='sudo service postgresql stop'
alias sspgsres='sudo service postgresql restart'
alias ssredisstart='sudo service redis-server start'
alias ssredisstop='sudo service redis-server stop'

# ------------------------------------------
# Applications
# ------------------------------------------
alias d='docker'
alias v='vim'
alias g='git'
alias ta='tmux attach -t main || tmux new -s main'
alias td='tmux detach'
alias msql='mysql -uroot -p'
# npm install -g http-server
alias ws='http-server -c-1 -p 3333 -o'
alias ci='code-insiders'
alias c='code'

# ------------------------------------------
# Language specific
# ------------------------------------------
alias rb='ruby'
alias js='node'

# ------------------------------------------
# Other
# ------------------------------------------
alias q='exit'
alias topdu='du -a | sort -nr | head -50'
alias fsize='du -s'
alias timer='echo "Timer started. Stop with Ctrl-D." && date && time cat && date'
alias gtags='starscope -e ctags'

function crypt() {
    openssl des3 -in "$1" -out "$2"
}

function decrypt() {
    openssl des3 -d -in "$1" -out "$2"
}

# =====================================================================================================================
# Exports
# =====================================================================================================================

# Add my bin folders to PATH
export PATH=$HOME/bin:/usr/local/bin:$PATH

# SSH
export SSH_KEY_PATH="~/.ssh/dsa_id"

# Add android sdk to path if it exists
if [ -d $HOME/lib/android-sdk-linux ]; then
  export PATH=$HOME/lib/android-sdk-linux/tools:$PATH
  export ANDROID_HOME='~/lib/android-sdk-linux'
  if [ -d $HOME/lib/android-sdk-linux/platform-tools ]; then
    export PATH=$HOME/lib/android-sdk-linux/platform-tools:$PATH
  fi
fi

# Add elixir bin into PATH if exists
if [ -d $HOME/lib/elixir/bin ]; then
  export PATH=$HOME/lib/elixir/bin:$PATH
fi

# YARN package manager bin
export PATH="$PATH:`yarn global bin`"

# ZHS autosuggestions
if [ -d $HOME/.zsh/zsh-autosuggestions ]; then
  source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
fi

# ZHS syntax highlighting
if [ -d $HOME/.zsh/zsh-syntax-highlighting ]; then
  source ~/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi

export PATH="$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init -)"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Direnv hook
eval "$(direnv hook zsh)"

export GPG_TTY=$(tty)

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
export PATH="$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init -)"
export GPG_TTY=$(tty)

export FLYCTL_INSTALL="/home/marcelolx/.fly"
export PATH="$FLYCTL_INSTALL/bin:$PATH"

setxkbmap br